/* tslint:disable */
/* eslint-disable */
/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  SuccessResponse,
} from '../models';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    SuccessResponseFromJSON,
    SuccessResponseToJSON,
} from '../models';

export interface DeleteEnvironementFeatureFlagOverrideRequest {
    featureFlagKey: string;
}

export interface UpdateEnvironementFeatureFlagOverrideRequest {
    featureFlagKey: string;
    value: string;
}

/**
 * 
 */
export class EnvironmentsApi extends runtime.BaseAPI {

    /**
     * Delete environment feature flag override.
     * Delete environment feature flag override
     */
    async deleteEnvironementFeatureFlagOverrideRaw(requestParameters: DeleteEnvironementFeatureFlagOverrideRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>> {
        if (requestParameters.featureFlagKey === null || requestParameters.featureFlagKey === undefined) {
            throw new runtime.RequiredError('featureFlagKey','Required parameter requestParameters.featureFlagKey was null or undefined when calling deleteEnvironementFeatureFlagOverride.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("kindeBearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/v1/environment/feature_flags/{feature_flag_key}`.replace(`{${"feature_flag_key"}}`, encodeURIComponent(String(requestParameters.featureFlagKey))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseFromJSON(jsonValue));
    }

    /**
     * Delete environment feature flag override.
     * Delete environment feature flag override
     */
    async deleteEnvironementFeatureFlagOverride(requestParameters: DeleteEnvironementFeatureFlagOverrideRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse> {
        const response = await this.deleteEnvironementFeatureFlagOverrideRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Delete all environment feature flag overrides.
     * Delete all environment feature flag overrides
     */
    async deleteEnvironementFeatureFlagOverridesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("kindeBearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/v1/environment/feature_flags/`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseFromJSON(jsonValue));
    }

    /**
     * Delete all environment feature flag overrides.
     * Delete all environment feature flag overrides
     */
    async deleteEnvironementFeatureFlagOverrides(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse> {
        const response = await this.deleteEnvironementFeatureFlagOverridesRaw(initOverrides);
        return await response.value();
    }

    /**
     * Update environment feature flag override.
     * Update environment feature flag override
     */
    async updateEnvironementFeatureFlagOverrideRaw(requestParameters: UpdateEnvironementFeatureFlagOverrideRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>> {
        if (requestParameters.featureFlagKey === null || requestParameters.featureFlagKey === undefined) {
            throw new runtime.RequiredError('featureFlagKey','Required parameter requestParameters.featureFlagKey was null or undefined when calling updateEnvironementFeatureFlagOverride.');
        }

        if (requestParameters.value === null || requestParameters.value === undefined) {
            throw new runtime.RequiredError('value','Required parameter requestParameters.value was null or undefined when calling updateEnvironementFeatureFlagOverride.');
        }

        const queryParameters: any = {};

        if (requestParameters.value !== undefined) {
            queryParameters['value'] = requestParameters.value;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("kindeBearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/v1/environment/feature_flags/{feature_flag_key}`.replace(`{${"feature_flag_key"}}`, encodeURIComponent(String(requestParameters.featureFlagKey))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseFromJSON(jsonValue));
    }

    /**
     * Update environment feature flag override.
     * Update environment feature flag override
     */
    async updateEnvironementFeatureFlagOverride(requestParameters: UpdateEnvironementFeatureFlagOverrideRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse> {
        const response = await this.updateEnvironementFeatureFlagOverrideRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
