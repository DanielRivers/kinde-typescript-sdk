/* tslint:disable */
/* eslint-disable */
/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
import type { RedirectCallbackUrls } from './RedirectCallbackUrls.js';
import {
    RedirectCallbackUrlsFromJSON,
    RedirectCallbackUrlsFromJSONTyped,
    RedirectCallbackUrlsToJSON,
} from './RedirectCallbackUrls.js';

/**
 * 
 * @export
 * @interface GetRedirectCallbackUrlsResponse
 */
export interface GetRedirectCallbackUrlsResponse {
    /**
     * An application's redirect callback URLs.
     * @type {Array<RedirectCallbackUrls>}
     * @memberof GetRedirectCallbackUrlsResponse
     */
    redirectUrls?: Array<RedirectCallbackUrls>;
}

/**
 * Check if a given object implements the GetRedirectCallbackUrlsResponse interface.
 */
export function instanceOfGetRedirectCallbackUrlsResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetRedirectCallbackUrlsResponseFromJSON(json: any): GetRedirectCallbackUrlsResponse {
    return GetRedirectCallbackUrlsResponseFromJSONTyped(json, false);
}

export function GetRedirectCallbackUrlsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetRedirectCallbackUrlsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'redirectUrls': !exists(json, 'redirect_urls') ? undefined : ((json['redirect_urls'] as Array<any>).map(RedirectCallbackUrlsFromJSON)),
    };
}

export function GetRedirectCallbackUrlsResponseToJSON(value?: GetRedirectCallbackUrlsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'redirect_urls': value.redirectUrls === undefined ? undefined : ((value.redirectUrls as Array<any>).map(RedirectCallbackUrlsToJSON)),
    };
}

