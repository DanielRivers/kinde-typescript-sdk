/* tslint:disable */
/* eslint-disable */
/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
import type { OrganizationUserPermission } from './OrganizationUserPermission.js';
import {
    OrganizationUserPermissionFromJSON,
    OrganizationUserPermissionFromJSONTyped,
    OrganizationUserPermissionToJSON,
} from './OrganizationUserPermission.js';

/**
 * 
 * @export
 * @interface GetOrganizationsUserPermissionsResponse
 */
export interface GetOrganizationsUserPermissionsResponse {
    /**
     * Response code.
     * @type {string}
     * @memberof GetOrganizationsUserPermissionsResponse
     */
    code?: string;
    /**
     * Response message.
     * @type {string}
     * @memberof GetOrganizationsUserPermissionsResponse
     */
    message?: string;
    /**
     * 
     * @type {Array<OrganizationUserPermission>}
     * @memberof GetOrganizationsUserPermissionsResponse
     */
    permissions?: Array<OrganizationUserPermission>;
}

/**
 * Check if a given object implements the GetOrganizationsUserPermissionsResponse interface.
 */
export function instanceOfGetOrganizationsUserPermissionsResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetOrganizationsUserPermissionsResponseFromJSON(json: any): GetOrganizationsUserPermissionsResponse {
    return GetOrganizationsUserPermissionsResponseFromJSONTyped(json, false);
}

export function GetOrganizationsUserPermissionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetOrganizationsUserPermissionsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'permissions': !exists(json, 'permissions') ? undefined : ((json['permissions'] as Array<any>).map(OrganizationUserPermissionFromJSON)),
    };
}

export function GetOrganizationsUserPermissionsResponseToJSON(value?: GetOrganizationsUserPermissionsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'message': value.message,
        'permissions': value.permissions === undefined ? undefined : ((value.permissions as Array<any>).map(OrganizationUserPermissionToJSON)),
    };
}

