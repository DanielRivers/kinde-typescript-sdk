/* tslint:disable */
/* eslint-disable */
/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
import type { OrganizationUserPermissionRolesInner } from './OrganizationUserPermissionRolesInner.js';
import {
    OrganizationUserPermissionRolesInnerFromJSON,
    OrganizationUserPermissionRolesInnerFromJSONTyped,
    OrganizationUserPermissionRolesInnerToJSON,
} from './OrganizationUserPermissionRolesInner.js';

/**
 * 
 * @export
 * @interface OrganizationUserPermission
 */
export interface OrganizationUserPermission {
    /**
     * 
     * @type {string}
     * @memberof OrganizationUserPermission
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationUserPermission
     */
    key?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationUserPermission
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationUserPermission
     */
    description?: string;
    /**
     * 
     * @type {Array<OrganizationUserPermissionRolesInner>}
     * @memberof OrganizationUserPermission
     */
    roles?: Array<OrganizationUserPermissionRolesInner>;
}

/**
 * Check if a given object implements the OrganizationUserPermission interface.
 */
export function instanceOfOrganizationUserPermission(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrganizationUserPermissionFromJSON(json: any): OrganizationUserPermission {
    return OrganizationUserPermissionFromJSONTyped(json, false);
}

export function OrganizationUserPermissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationUserPermission {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'key': !exists(json, 'key') ? undefined : json['key'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'roles': !exists(json, 'roles') ? undefined : ((json['roles'] as Array<any>).map(OrganizationUserPermissionRolesInnerFromJSON)),
    };
}

export function OrganizationUserPermissionToJSON(value?: OrganizationUserPermission | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'key': value.key,
        'name': value.name,
        'description': value.description,
        'roles': value.roles === undefined ? undefined : ((value.roles as Array<any>).map(OrganizationUserPermissionRolesInnerToJSON)),
    };
}

