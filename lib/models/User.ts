/* tslint:disable */
/* eslint-disable */
/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * Unique id of the user in Kinde.
     * @type {string}
     * @memberof User
     */
    id?: string;
    /**
     * External id for user.
     * @type {string}
     * @memberof User
     */
    providedId?: string;
    /**
     * Default email address of the user in Kinde.
     * @type {string}
     * @memberof User
     */
    email?: string;
    /**
     * User's last name.
     * @type {string}
     * @memberof User
     */
    lastName?: string;
    /**
     * User's first name.
     * @type {string}
     * @memberof User
     */
    firstName?: string;
    /**
     * User's full name.
     * @type {string}
     * @memberof User
     */
    fullName?: string;
    /**
     * Whether the user is currently suspended or not.
     * @type {boolean}
     * @memberof User
     */
    isSuspended?: boolean;
    /**
     * User's profile picture URL.
     * @type {string}
     * @memberof User
     */
    picture?: string;
    /**
     * Whether the user has been asked to reset their password.
     * @type {boolean}
     * @memberof User
     */
    isPasswordResetRequested?: boolean | null;
    /**
     * Total number of user sign ins.
     * @type {number}
     * @memberof User
     */
    totalSignIns?: number | null;
    /**
     * Number of consecutive failed user sign ins.
     * @type {number}
     * @memberof User
     */
    failedSignIns?: number | null;
    /**
     * Last sign in date in ISO 8601 format.
     * @type {string}
     * @memberof User
     */
    lastSignedIn?: string | null;
    /**
     * Date of user creation in ISO 8601 format.
     * @type {string}
     * @memberof User
     */
    createdOn?: string | null;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'providedId': !exists(json, 'provided_id') ? undefined : json['provided_id'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'lastName': !exists(json, 'last_name') ? undefined : json['last_name'],
        'firstName': !exists(json, 'first_name') ? undefined : json['first_name'],
        'fullName': !exists(json, 'full_name') ? undefined : json['full_name'],
        'isSuspended': !exists(json, 'is_suspended') ? undefined : json['is_suspended'],
        'picture': !exists(json, 'picture') ? undefined : json['picture'],
        'isPasswordResetRequested': !exists(json, 'is_password_reset_requested') ? undefined : json['is_password_reset_requested'],
        'totalSignIns': !exists(json, 'total_sign_ins') ? undefined : json['total_sign_ins'],
        'failedSignIns': !exists(json, 'failed_sign_ins') ? undefined : json['failed_sign_ins'],
        'lastSignedIn': !exists(json, 'last_signed_in') ? undefined : json['last_signed_in'],
        'createdOn': !exists(json, 'created_on') ? undefined : json['created_on'],
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'provided_id': value.providedId,
        'email': value.email,
        'last_name': value.lastName,
        'first_name': value.firstName,
        'full_name': value.fullName,
        'is_suspended': value.isSuspended,
        'picture': value.picture,
        'is_password_reset_requested': value.isPasswordResetRequested,
        'total_sign_ins': value.totalSignIns,
        'failed_sign_ins': value.failedSignIns,
        'last_signed_in': value.lastSignedIn,
        'created_on': value.createdOn,
    };
}

