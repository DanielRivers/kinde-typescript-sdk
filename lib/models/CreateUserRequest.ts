/* tslint:disable */
/* eslint-disable */
/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
import type { CreateUserRequestIdentitiesInner } from './CreateUserRequestIdentitiesInner.js';
import {
    CreateUserRequestIdentitiesInnerFromJSON,
    CreateUserRequestIdentitiesInnerFromJSONTyped,
    CreateUserRequestIdentitiesInnerToJSON,
} from './CreateUserRequestIdentitiesInner.js';
import type { CreateUserRequestProfile } from './CreateUserRequestProfile.js';
import {
    CreateUserRequestProfileFromJSON,
    CreateUserRequestProfileFromJSONTyped,
    CreateUserRequestProfileToJSON,
} from './CreateUserRequestProfile.js';

/**
 * 
 * @export
 * @interface CreateUserRequest
 */
export interface CreateUserRequest {
    /**
     * 
     * @type {CreateUserRequestProfile}
     * @memberof CreateUserRequest
     */
    profile?: CreateUserRequestProfile;
    /**
     * Array of identities to assign to the created user
     * @type {Array<CreateUserRequestIdentitiesInner>}
     * @memberof CreateUserRequest
     */
    identities?: Array<CreateUserRequestIdentitiesInner>;
}

/**
 * Check if a given object implements the CreateUserRequest interface.
 */
export function instanceOfCreateUserRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreateUserRequestFromJSON(json: any): CreateUserRequest {
    return CreateUserRequestFromJSONTyped(json, false);
}

export function CreateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUserRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'profile': !exists(json, 'profile') ? undefined : CreateUserRequestProfileFromJSON(json['profile']),
        'identities': !exists(json, 'identities') ? undefined : ((json['identities'] as Array<any>).map(CreateUserRequestIdentitiesInnerFromJSON)),
    };
}

export function CreateUserRequestToJSON(value?: CreateUserRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'profile': CreateUserRequestProfileToJSON(value.profile),
        'identities': value.identities === undefined ? undefined : ((value.identities as Array<any>).map(CreateUserRequestIdentitiesInnerToJSON)),
    };
}

